
  - name: User | Add group(s)
    group: name={{ item.group }} gid={{ item.gid }} state=present
    with_items: "{{oracle_groups}}"
    tags:
     - group

  - name: User | Add Oracle user
    user: name={{ item.username }}  group={{ item.primgroup }} groups={{ item.othergroups }} uid={{ item.uid }} generate_ssh_key=yes append=yes state=present password={{ item.passwd }}
    with_items: "{{oracle_users}}"
    tags:
     - user

  - name: User | Add Grid user
    user: name={{ item.username }}  group={{ item.primgroup }} groups={{ item.othergroups }} uid={{ item.uid }} generate_ssh_key=yes append=yes state=present password={{ item.passwd }}
    #   when: role_separation
    with_items: "{{grid_users}}"
    tags:
     - user


  - name: Create common directories
    file: dest={{ item.name }} mode={{ item.mode}} owner={{ item.owner }} group={{ item.group }} state=directory
    with_items: "{{oracle_directories}}"
    tags:
      - directories


  - name: install-home-db | Create ORACLE_HOME directory
    file: dest={{ oracle_home_db }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
    #with_items: "{{db_homes_installed}}"
    #    when: db_homes_config[item.home] is defined and item.state|lower == 'present'
    tags:
      - directoriesdb


  - name: Create GRID_HOME directory (GI)
    file: dest={{ oracle_home_gi }} owner="{{ grid_install_user }}" group={{ oracle_group }} state=directory mode=775
    become: yes
    tags:
        - directoriesGI
        #   when: oracle_home_gi not in checkgiinstall.stdout


  - name: firewall status
    command: "systemctl status firewalld"
    become: yes
    ignore_errors: yes
    register: firewalldstatus

  - name: status
    debug: "msg={{ firewalldstatus }}"

  - name: firewall status
    command: systemctl stop firewalld  state=stopped enabled=no
    when: disable_firewall
    become: yes
    ignore_errors: yes
    register: firewalldisable

  - name: firewall status
    command: systemctl disable firewalld  state=stopped enabled=no
    when: disable_firewall
    become: yes
    ignore_errors: yes
    register: firewalldisable



  - name: Disable selinux (permanently)
    selinux: state=disabled
    when: disable_selinux and ansible_os_family == 'RedHat'
    tags: selinux
    register: selinux

  - name: Disable selinux (runtime)
    shell: setenforce 0
    when: disable_selinux and ansible_os_family == 'RedHat'
    changed_when: disable_selinux_runtime.rc == 0
    failed_when: disable_selinux_runtime.rc > 0 and "SELinux is disabled" not in disable_selinux_runtime.stderr
    register: disable_selinux_runtime
    tags: selinux

  - name: Oracle-recommended kernel settings
    sysctl: name={{ item.name }} value="{{ item.value }}" state=present reload=yes ignoreerrors=yes
    with_items: "{{oracle_sysctl}}"
    tags: sysctl


  - name: filesystem | Create directory for oraInventory
    file: path={{ oracle_inventory_loc }} state=directory owner={{ grid_install_user }} group={{ oracle_group }} mode=775
    tags: hostfs


  - name: Create stage directory
    file: dest={{ oracle_stage }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
    tags: stagedir

  - name: Create rsp stage directory
    file: dest={{ oracle_rsp_stage }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
    tags: stagedir

  - name: install-home-db | copy Binary to destinations
    copy: src=/home/config/{{ item }} dest={{ oracle_stage }} owner={{ grid_install_user }}  group={{ oracle_group }} mode=775
    with_items:
            - linuxx64_12201_grid_home.zip
    become_user: "{{ grid_install_user }}"
    tags:
         - oragisw

  - name: install-home-db | Unzip Binary
    action: shell unzip -oq  {{ oracle_stage }}/{{ item }}  -d {{ oracle_home_gi }}
    with_items:
        - linuxx64_12201_grid_home.zip
    become_user: grid_install_user
    tags:
        - oragiswunpack

  - name: remove gi software
    command: rm -rf  {{ oracle_stage }}/{{ item }}
    with_items:
        - linuxx64_12201_grid_home.zip
    become_user: grid_install_user
    tags:
        - removegisw

  - name: copy install asm pkg
    copy: src=/home/config/{{ item }} dest={{ oracle_stage }} owner=root group=root mode=775
    with_items:
      - oracleasmlib-2.0.12-1.el7.x86_64.rpm
      - oracleasm-support-2.1.11-2.el7.x86_64.rpm
    ignore_errors: yes
    tags:
      - asmpkg

  - name: install asm pkg
    yum:
        name: /home/stage/oracleasmlib-2.0.12-1.el7.x86_64.rpm
        state: present
    tags:
      - asmpkginstall

  - name: install asm package
    yum:
        name: /home/stage/oracleasm-support-2.1.11-2.el7.x86_64.rpm
        state: present
    tags:
      - asmpkginstall1


  - name: changing permission
    shell: chown -R grid:oinstall {{ oracle_home_gi }}
    become: yes
